// Generated by CoffeeScript 1.4.0

/*
  http://programmingpraxis.com/2013/01/18/triangle-trilemma/

  Todayâ€™s exercise is Problem A from the Google Code Jam Beta 2008. The problem is to accept three points as input,
  determine if they form a triangle, and, if they do, classify it as equilateral (all three sides the same),
  isoceles (two sides the same, the other different), or scalene (all three sides different), and also classify it as
  acute (all three angles less than 90 degrees), obtuse (one angle greater than 90 degrees) or right (one angle equal 90 degrees).
*/


(function() {
  var calcAngle, cartProd, classifyTriangle, isIsosceles, isSameAngle, point, root, vecLength, vector;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  point = function(x, y) {
    return {
      x: x,
      y: y,
      same: function(p) {
        return x === p.x && y === p.y;
      }
    };
  };

  vector = function(p1, p2) {
    return {
      x: p2.x - p1.x,
      y: p2.y - p1.y
    };
  };

  cartProd = function(v1, v2) {
    return v1.x * v2.x + v1.y * v2.y;
  };

  vecLength = function(v) {
    return Math.sqrt(v.x * v.x + v.y * v.y);
  };

  calcAngle = function(v1, v2) {
    return Math.round(Math.acos(cartProd(v1, v2) / (vecLength(v1) * vecLength(v2))).toFixed(2) * 180.00 / 3.14);
  };

  isSameAngle = function(a1, a2) {
    return Math.abs(a1 - a2) <= 1;
  };

  isIsosceles = function(a1, a2, a3) {
    if (isSameAngle(a1, a2)) {
      if (a3 === 90) {
        return "isosceles right";
      }
      if (a3 < 90) {
        return "isosceles acute";
      }
      if (a3 > 90) {
        return "isosceles obtuse";
      }
    }
    return false;
  };

  classifyTriangle = function(p1, p2, p3) {
    var a1, a2, a3, result, v1, v2, v3;
    v1 = vector(p1, p2);
    v2 = vector(p1, p3);
    v3 = vector(p2, p3);
    a1 = calcAngle(v1, v2);
    a2 = calcAngle(v2, v3);
    a3 = 180 - a1 - a2;
    if (a1 === 0 || a2 === 0 || a3 === 0) {
      return "not a triangle";
    }
    if (p1.same(p2) || p1.same(p3) || p2.same(p3)) {
      return "not a triangle";
    }
    if (a1 === 60 && a2 === 60) {
      return "equilateral";
    }
    result = isIsosceles(a1, a2, a3) || isIsosceles(a1, a3, a2) || isIsosceles(a3, a2, a1);
    if (result) {
      return result;
    }
    if (a1 > 90 || a2 > 90 || a3 > 90) {
      return "scalene obtuse";
    }
    if (a1 === 90 || a2 === 90 || a3 === 90) {
      return "scalene right";
    }
    return "scalene acute";
  };

  console.log(classifyTriangle(point(0, 0), point(0, 4), point(1, 2)));

  console.log(classifyTriangle(point(2, 2), point(2, 4), point(4, 3)));

  console.log(classifyTriangle(point(5, 5), point(5, 6), point(6, 5)));

  console.log(classifyTriangle(point(1, 1), point(1, 4), point(3, 2)));

  console.log(classifyTriangle(point(3, 3), point(3, 4), point(5, 3)));

  console.log(classifyTriangle(point(4, 4), point(4, 5), point(5, 6)));

  console.log(classifyTriangle(point(6, 6), point(6, 7), point(6, 8)));

  console.log(classifyTriangle(point(7, 7), point(7, 7), point(7, 7)));

}).call(this);
